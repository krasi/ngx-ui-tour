{"version":3,"file":"ngx-ui-tour-md-menu.mjs","sources":["../../../projects/ngx-ui-tour-md-menu/src/lib/tour-anchor-opener.component.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/ngx-md-menu-tour.service.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/tour-step-template.service.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/tour-anchor.directive.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/tour-step-template/tour-step-template.component.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/tour-step-template/tour-step-template.component.html","../../../projects/ngx-ui-tour-md-menu/src/lib/tour-proxy-anchor.component.ts","../../../projects/ngx-ui-tour-md-menu/src/lib/md-menu.module.ts","../../../projects/ngx-ui-tour-md-menu/src/ngx-ui-tour-md-menu.ts"],"sourcesContent":["import {Component, ViewChild,} from '@angular/core';\nimport {MatMenuModule, MatMenuTrigger} from '@angular/material/menu';\n\n@Component({\n    selector: 'tour-anchor-opener',\n    styles: [\n        `\n            :host {\n                display: none;\n            }\n        `\n    ],\n    template: `\n        <!--suppress HtmlUnknownAttribute -->\n        <span matMenuTriggerFor [matMenuTriggerRestoreFocus]=\"false\"></span>\n    `,\n    standalone: true,\n    imports: [\n        MatMenuModule\n    ]\n})\nexport class TourAnchorOpenerComponent {\n\n    @ViewChild(MatMenuTrigger, {static: true})\n    public trigger: MatMenuTrigger;\n\n}\n","import {Injectable} from '@angular/core';\nimport {TourService} from 'ngx-ui-tour-core';\nimport {IMdStepOption} from './step-option.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxmTourService<T extends IMdStepOption = IMdStepOption> extends TourService<T> {\n\n    public override initialize(steps: T[], stepDefaults?: T) {\n        const userDefaults = this.getDefaults();\n\n        stepDefaults ??= {} as T;\n        stepDefaults.showArrow ??= userDefaults?.showArrow ?? true;\n\n        super.initialize(steps, stepDefaults);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {TourStepTemplateComponent} from './tour-step-template/tour-step-template.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TourStepTemplateService {\n    public templateComponent: TourStepTemplateComponent;\n}\n","import type {OnDestroy, OnInit} from '@angular/core';\nimport {Directive, ElementRef, HostBinding, Input, ViewContainerRef} from '@angular/core';\nimport {TourAnchorDirective, TourState} from 'ngx-ui-tour-core';\nimport {first, Subscription} from 'rxjs';\n\nimport {TourAnchorOpenerComponent} from './tour-anchor-opener.component';\nimport {TourStepTemplateService} from './tour-step-template.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\nimport {IMdStepOption} from './step-option.interface';\nimport {MatMenu, MatMenuPanel} from '@angular/material/menu';\nimport {FlexibleConnectedPositionStrategy, HorizontalConnectionPos, VerticalConnectionPos} from '@angular/cdk/overlay';\n\ninterface CustomMenuTrigger {\n    _element: ElementRef<HTMLElement>;\n    _parentMaterialMenu: MatMenu;\n    _setPosition: (menu: MatMenuPanel, positionStrategy: FlexibleConnectedPositionStrategy) => void\n}\n\n@Directive({\n    selector: '[tourAnchor]',\n    standalone: true\n})\nexport class TourAnchorMatMenuDirective implements OnInit, OnDestroy, TourAnchorDirective {\n\n    @Input()\n    public tourAnchor: string;\n\n    public opener: TourAnchorOpenerComponent;\n    public menuCloseSubscription: Subscription;\n\n    @HostBinding('class.touranchor--is-active') public isActive: boolean;\n\n    constructor(\n        private viewContainer: ViewContainerRef,\n        public element: ElementRef,\n        private tourService: NgxmTourService,\n        private tourStepTemplate: TourStepTemplateService\n    ) {}\n\n    ngOnInit(): void {\n        this.tourService.register(this.tourAnchor, this);\n    }\n\n    ngOnDestroy(): void {\n        this.tourService.unregister(this.tourAnchor);\n    }\n\n    private createOpener() {\n        this.opener = this.viewContainer.createComponent(TourAnchorOpenerComponent).instance;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    showTourStep(step: IMdStepOption): void {\n        this.isActive = true;\n        this.tourStepTemplate.templateComponent.step = step;\n\n        if (!this.opener) {\n            this.createOpener();\n        }\n\n        const trigger = this.opener.trigger,\n            customTrigger = trigger as unknown as CustomMenuTrigger;\n        customTrigger._element = this.element;\n        // Fixes tour step closing when hovering over mat-menu item, issue #123\n        customTrigger._parentMaterialMenu = null;\n        // Overrides position setting to support opening to the sides\n        customTrigger._setPosition = (menu, positionStrategy) => this.setPosition(menu, positionStrategy, step);\n\n        const menu = this.tourStepTemplate.templateComponent.tourStep;\n        trigger.menu = menu;\n        menu.xPosition = step.placement?.xPosition || 'after';\n        menu.yPosition = step.placement?.yPosition || 'below';\n        menu.hasBackdrop = !!step.closeOnOutsideClick;\n\n        const popoverClass = step.popoverClass ?? '',\n            arrow = step.showArrow ? 'arrow' : '',\n            horizontal = step.placement?.horizontal ? 'horizontal' : '';\n\n        menu.panelClass = `tour-step ${popoverClass} ${arrow} ${horizontal}`;\n        trigger.openMenu();\n\n        if (this.menuCloseSubscription) {\n            this.menuCloseSubscription.unsubscribe();\n        }\n        this.menuCloseSubscription = trigger.menuClosed\n            .pipe(first())\n            .subscribe(() => {\n                if (this.tourService.getStatus() !== TourState.OFF) {\n                    this.tourService.end();\n                }\n            });\n    }\n\n    private setPosition(menu: MatMenuPanel, positionStrategy: FlexibleConnectedPositionStrategy, step: IMdStepOption) {\n        let [originX, originFallbackX]: HorizontalConnectionPos[] =\n            menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const isHorizontal = step.placement?.horizontal;\n\n        if (isHorizontal) {\n            overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n        } else if (!menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        const offset = step.backdropConfig?.offset ?? 0,\n            offsetX = isHorizontal ? offset : -offset,\n            offsetY = isHorizontal ? -offset : offset;\n\n        const original = {originX, originY, overlayX, overlayY, offsetX, offsetY};\n        const flipX = {\n            originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY,\n            offsetX: -offsetX, offsetY\n        };\n        const flipY = {\n            originX, originY: originFallbackY, overlayX, overlayY: overlayFallbackY, offsetX, offsetY: -offsetY\n        };\n        const flipXY = {\n            originX: originFallbackX, originY: originFallbackY, overlayX: overlayFallbackX, overlayY: overlayFallbackY,\n            offsetX: -offsetX, offsetY: -offsetY\n        };\n\n        positionStrategy.withPositions(isHorizontal ? [original, flipX] : [original, flipY, flipXY]);\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    public hideTourStep(): void {\n        this.isActive = false;\n        if (this.menuCloseSubscription) {\n            this.menuCloseSubscription.unsubscribe();\n        }\n        this.opener.trigger.closeMenu();\n    }\n\n}\n","import {AfterViewInit, Component, ContentChild, Input, TemplateRef, ViewChild} from '@angular/core';\nimport {TourHotkeyListenerComponent} from 'ngx-ui-tour-core';\nimport {MatMenu, MatMenuModule} from '@angular/material/menu';\nimport {IMdStepOption} from '../step-option.interface';\nimport {TourStepTemplateService} from '../tour-step-template.service';\nimport {NgxmTourService} from '../ngx-md-menu-tour.service';\nimport {MatCardModule} from '@angular/material/card';\nimport {NgTemplateOutlet} from '@angular/common';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@Component({\n    selector: 'tour-step-template',\n    templateUrl: './tour-step-template.component.html',\n    styleUrls: ['./tour-step-template.component.scss'],\n    standalone: true,\n    imports: [\n        MatCardModule,\n        MatMenuModule,\n        NgTemplateOutlet,\n        MatButtonModule,\n        MatIconModule\n    ]\n})\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterViewInit {\n\n    @ViewChild(MatMenu)\n    public tourStep: MatMenu;\n\n    @Input()\n    public stepTemplate: TemplateRef<{ step: IMdStepOption }>;\n\n    @ContentChild(TemplateRef)\n    public stepTemplateContent: TemplateRef<{ step: IMdStepOption }>;\n\n    public step: IMdStepOption = {};\n\n    constructor(\n        private tourStepTemplateService: TourStepTemplateService,\n        public override tourService: NgxmTourService\n    ) {\n        super(tourService);\n    }\n\n    public ngAfterViewInit(): void {\n        this.tourStepTemplateService.templateComponent = this;\n    }\n\n}\n","<mat-menu [overlapTrigger]=\"false\">\n    <ng-container\n        *ngTemplateOutlet=\"\n            stepTemplate || stepTemplateContent || defaultTemplate;\n            context: { step: step }\n        \"\n    ></ng-container>\n</mat-menu>\n\n<ng-template #defaultTemplate let-step=\"step\">\n    <mat-card\n        (click)=\"$event.stopPropagation()\"\n        [style.width]=\"step.stepDimensions?.width\"\n        [style.min-width]=\"step.stepDimensions?.minWidth\"\n        [style.max-width]=\"step.stepDimensions?.maxWidth\"\n    >\n        <mat-card-header>\n            <div class=\"header-group\">\n                <mat-card-title>\n                    {{ step.title }}\n                </mat-card-title>\n                <button\n                    mat-icon-button\n                    (click)=\"tourService.end()\"\n                    class=\"close\"\n                >\n                    <mat-icon>close</mat-icon>\n                </button>\n            </div>\n        </mat-card-header>\n\n        <mat-card-content\n            class=\"mat-body\"\n            [innerHTML]=\"step.content\"\n        ></mat-card-content>\n\n        <mat-card-actions\n            [class.no-progress]=\"!step.showProgress\"\n        >\n            <button\n                mat-button\n                class=\"prev\"\n                [disabled]=\"!tourService.hasPrev(step)\"\n                (click)=\"tourService.prev()\"\n            >\n                <mat-icon>chevron_left</mat-icon>\n                {{ step.prevBtnTitle }}\n            </button>\n            @if (step.showProgress) {\n                <div class=\"progress\">{{ tourService.steps?.indexOf(step) + 1 }} / {{ tourService.steps?.length }}</div>\n            }\n            @if (tourService.hasNext(step) && !step.nextOnAnchorClick) {\n                <button\n                    class=\"next\"\n                    (click)=\"tourService.next()\"\n                    mat-button\n                >\n                    {{ step.nextBtnTitle }}\n                    <mat-icon iconPositionEnd>chevron_right</mat-icon>\n                </button>\n            }\n            @if (!tourService.hasNext(step)) {\n                <button\n                    mat-button\n                    (click)=\"tourService.end()\"\n                >\n                    {{ step.endBtnTitle }}\n                </button>\n            }\n        </mat-card-actions>\n    </mat-card>\n</ng-template>\n","import {BaseTourProxyAnchor} from 'ngx-ui-tour-core';\nimport {ChangeDetectionStrategy, Component, Input, inject} from '@angular/core';\nimport {TourAnchorMatMenuDirective} from './tour-anchor.directive';\n\n@Component({\n    selector: 'tour-proxy-anchor',\n    template: ``,\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    imports: [\n        TourAnchorMatMenuDirective\n    ],\n    hostDirectives: [{\n        directive: TourAnchorMatMenuDirective,\n        inputs: ['tourAnchor: anchorId']\n    }]\n})\nexport class TourProxyAnchorComponent extends BaseTourProxyAnchor {\n\n    // noinspection JSUnusedGlobalSymbols\n    protected override readonly anchorDirective = inject(TourAnchorMatMenuDirective, {\n        host: true\n    });\n\n    @Input({required: true})\n    public override anchorEl: string | HTMLElement;\n\n}\n","import {NgModule} from '@angular/core';\nimport {TourAnchorMatMenuDirective} from './tour-anchor.directive';\nimport {TourStepTemplateComponent} from './tour-step-template/tour-step-template.component';\nimport {TourProxyAnchorComponent} from './tour-proxy-anchor.component';\n\nconst COMPONENTS = [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourProxyAnchorComponent];\n\n@NgModule({\n    imports: COMPONENTS,\n    exports: COMPONENTS\n})\nexport class TourMatMenuModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.NgxmTourService","i2.TourStepTemplateService","i1.TourStepTemplateService","i2.NgxmTourService","i4"],"mappings":"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"}