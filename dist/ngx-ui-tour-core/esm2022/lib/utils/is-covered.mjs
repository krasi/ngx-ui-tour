export function isCovered(htmlElement, sidesToCheck = 2 /* ElementSides.All */) {
    const rect = htmlElement.getBoundingClientRect(), topEl = document.elementFromPoint(rect.left, rect.top), bottomEl = document.elementFromPoint(rect.right, rect.bottom), isTopCovered = !!topEl && topEl !== htmlElement && !areElementsRelated(topEl, htmlElement), isBottomCovered = !!bottomEl && bottomEl !== htmlElement && !areElementsRelated(bottomEl, htmlElement);
    if (sidesToCheck === 0 /* ElementSides.Top */) {
        return isTopCovered;
    }
    if (sidesToCheck === 1 /* ElementSides.Bottom */) {
        return isBottomCovered;
    }
    return isTopCovered || isBottomCovered;
}
function areElementsRelated(el1, el2) {
    return el1.contains(el2) || el2.contains(el1);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtY292ZXJlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11aS10b3VyLWNvcmUvc3JjL2xpYi91dGlscy9pcy1jb3ZlcmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxTQUFTLENBQUMsV0FBd0IsRUFBRSx1Q0FBNkM7SUFDN0YsTUFBTSxJQUFJLEdBQUcsV0FBVyxDQUFDLHFCQUFxQixFQUFFLEVBQzVDLEtBQUssR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQ3RELFFBQVEsR0FBRyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQzdELFlBQVksR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLEtBQUssS0FBSyxXQUFXLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLEVBQzFGLGVBQWUsR0FBRyxDQUFDLENBQUMsUUFBUSxJQUFJLFFBQVEsS0FBSyxXQUFXLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFM0csSUFBSSxZQUFZLDZCQUFxQixFQUFFLENBQUM7UUFDcEMsT0FBTyxZQUFZLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksWUFBWSxnQ0FBd0IsRUFBRSxDQUFDO1FBQ3ZDLE9BQU8sZUFBZSxDQUFDO0lBQzNCLENBQUM7SUFFRCxPQUFPLFlBQVksSUFBSSxlQUFlLENBQUM7QUFDM0MsQ0FBQztBQUVELFNBQVMsa0JBQWtCLENBQUMsR0FBUyxFQUFFLEdBQVM7SUFDNUMsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFNpZGVzfSBmcm9tICcuL2lzLWluLXZpZXdwb3J0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ292ZXJlZChodG1sRWxlbWVudDogSFRNTEVsZW1lbnQsIHNpZGVzVG9DaGVjazogRWxlbWVudFNpZGVzID0gRWxlbWVudFNpZGVzLkFsbCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHJlY3QgPSBodG1sRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgICAgdG9wRWwgPSBkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHJlY3QubGVmdCwgcmVjdC50b3ApLFxuICAgICAgICBib3R0b21FbCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQocmVjdC5yaWdodCwgcmVjdC5ib3R0b20pLFxuICAgICAgICBpc1RvcENvdmVyZWQgPSAhIXRvcEVsICYmIHRvcEVsICE9PSBodG1sRWxlbWVudCAmJiAhYXJlRWxlbWVudHNSZWxhdGVkKHRvcEVsLCBodG1sRWxlbWVudCksXG4gICAgICAgIGlzQm90dG9tQ292ZXJlZCA9ICEhYm90dG9tRWwgJiYgYm90dG9tRWwgIT09IGh0bWxFbGVtZW50ICYmICFhcmVFbGVtZW50c1JlbGF0ZWQoYm90dG9tRWwsIGh0bWxFbGVtZW50KTtcblxuICAgIGlmIChzaWRlc1RvQ2hlY2sgPT09IEVsZW1lbnRTaWRlcy5Ub3ApIHtcbiAgICAgICAgcmV0dXJuIGlzVG9wQ292ZXJlZDtcbiAgICB9XG5cbiAgICBpZiAoc2lkZXNUb0NoZWNrID09PSBFbGVtZW50U2lkZXMuQm90dG9tKSB7XG4gICAgICAgIHJldHVybiBpc0JvdHRvbUNvdmVyZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGlzVG9wQ292ZXJlZCB8fCBpc0JvdHRvbUNvdmVyZWQ7XG59XG5cbmZ1bmN0aW9uIGFyZUVsZW1lbnRzUmVsYXRlZChlbDE6IE5vZGUsIGVsMjogTm9kZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBlbDEuY29udGFpbnMoZWwyKSB8fCBlbDIuY29udGFpbnMoZWwxKTtcbn0iXX0=